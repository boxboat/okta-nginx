# okta-nginx generated

server {
    listen ${LISTEN};
    server_name ${SERVER_NAME};

    # additional configuration for default_server
    include /etc/nginx/includes/default-server${SERVER_SUFFIX}.conf;

    # auth_request internal location
    location = @auth {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            #
            # Custom headers and headers various browsers *should* be OK with but aren't
            #
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        include /etc/nginx/includes/proxy-headers.conf;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Okta-Nginx-Request-Uri $request_uri;
        proxy_set_header X-Okta-Nginx-Validate-Claims-Template '${VALIDATE_CLAIMS_TEMPLATE}';
        proxy_set_header X-Okta-Nginx-Proxy-Set-Header-Names '${PROXY_SET_HEADER_NAMES}';
        proxy_set_header X-Okta-Nginx-Proxy-Set-Header-Values '${PROXY_SET_HEADER_VALUES}';
        proxy_pass http://auth_server/auth/validate;
    }

    # auth_request failed
    location @error401 {
        if ($auth_request_redirect != ""){
            return 307 $auth_request_redirect;
        }
        return 401;
    }

    # protected
    include /etc/nginx/includes/proxy-pass-protected${SERVER_SUFFIX}.conf;

    # unprotected
    include /etc/nginx/includes/proxy-pass-unprotected${SERVER_SUFFIX}.conf;

    # SSO redirect handler
    location ~* ^${APP_REDIRECT_PATH}$ {
        auth_request off;
        include /etc/nginx/includes/proxy-headers.conf;
        proxy_pass http://auth_server;
    }

    # SSO refresh and error handlers
    location ~* ^${SSO_PATH}(error|refresh/(check|done))$ {
        auth_request off;
        include /etc/nginx/includes/proxy-headers.conf;
        proxy_pass http://auth_server;
    }
}
